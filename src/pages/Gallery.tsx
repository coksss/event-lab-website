import Header from "@/components/Header";
import { Card } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import Icon from "@/components/ui/icon";
import { useState } from "react";

const Gallery = () => {
  const [filter, setFilter] = useState("all");

  const galleryItems = [
    {
      id: 1,
      image:
        "https://images.unsplash.com/photo-1492684223066-81342ee5ff30?w=500&h=400&fit=crop",
      title: "–ú—É–∑—ã–∫–∞–ª—å–Ω–æ–µ –ª–æ—Ç–æ –≤ –±–∞—Ä–µ –ê—Ç–º–æ—Å—Ñ–µ—Ä–∞",
      category: "music-bingo",
      date: "–ù–æ—è–±—Ä—å 2023",
    },
    {
      id: 2,
      image:
        "https://images.unsplash.com/photo-1511795409834-ef04bbd61622?w=500&h=400&fit=crop",
      title: "–ù–∞–ø—Ä—è–∂–µ–Ω–Ω–∞—è –∏–≥—Ä–∞ –≤ –º–∞—Ñ–∏—é",
      category: "mafia",
      date: "–û–∫—Ç—è–±—Ä—å 2023",
    },
    {
      id: 3,
      image:
        "https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=500&h=400&fit=crop",
      title: "–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –∫–≤–∏–∑",
      category: "quiz",
      date: "–°–µ–Ω—Ç—è–±—Ä—å 2023",
    },
    {
      id: 4,
      image:
        "https://images.unsplash.com/photo-1528605248644-14dd04022da1?w=500&h=400&fit=crop",
      title: "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –¢–µ—Ö–ö–æ–º–ø–∞–Ω–∏",
      category: "corporate",
      date: "–ê–≤–≥—É—Å—Ç 2023",
    },
    {
      id: 5,
      image:
        "https://images.unsplash.com/photo-1530103862676-de8c9debad1d?w=500&h=400&fit=crop",
      title: "–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –≤ –∫—Ä—É–≥—É –¥—Ä—É–∑–µ–π",
      category: "party",
      date: "–ò—é–ª—å 2023",
    },
    {
      id: 6,
      image:
        "https://images.unsplash.com/photo-1464366400600-7168b8af9bc3?w=500&h=400&fit=crop",
      title: "–°–≤–∞–¥–µ–±–Ω—ã–µ –∏–≥—Ä—ã –ê–Ω–Ω—ã –∏ –ú–∏—Ö–∞–∏–ª–∞",
      category: "wedding",
      date: "–ò—é–Ω—å 2023",
    },
    {
      id: 7,
      image:
        "https://images.unsplash.com/photo-1556761175-4b46a572b786?w=500&h=400&fit=crop",
      title: "–õ–µ—Ç–Ω–∏–π –∫–≤–∏–∑ –Ω–∞ –æ—Ç–∫—Ä—ã—Ç–æ–π —Ç–µ—Ä—Ä–∞—Å–µ",
      category: "quiz",
      date: "–ú–∞–π 2023",
    },
    {
      id: 8,
      image:
        "https://images.unsplash.com/photo-1515187029135-18ee286d815b?w=500&h=400&fit=crop",
      title: "–ú—É–∑—ã–∫–∞–ª—å–Ω–∞—è –±–∏—Ç–≤–∞ 2000-—Ö",
      category: "music-bingo",
      date: "–ê–ø—Ä–µ–ª—å 2023",
    },
  ];

  const categories = [
    { key: "all", label: "–í—Å–µ", icon: "Grid3X3" },
    { key: "music-bingo", label: "–ú—É–∑—ã–∫–∞–ª—å–Ω–æ–µ –ª–æ—Ç–æ", icon: "Music" },
    { key: "mafia", label: "–ú–∞—Ñ–∏—è", icon: "Users" },
    { key: "quiz", label: "–ö–≤–∏–∑—ã", icon: "Brain" },
    { key: "corporate", label: "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤—ã", icon: "Building" },
    { key: "party", label: "–í–µ—á–µ—Ä–∏–Ω–∫–∏", icon: "PartyPopper" },
    { key: "wedding", label: "–°–≤–∞–¥—å–±—ã", icon: "Heart" },
  ];

  const getCategoryLabel = (category: string) => {
    const cat = categories.find((c) => c.key === category);
    return cat ? cat.label : "–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ";
  };

  const filteredItems =
    filter === "all"
      ? galleryItems
      : galleryItems.filter((item) => item.category === filter);

  return (
    <div className="min-h-screen bg-gradient-purple-dark-blue relative overflow-hidden">
      <Header />

      {/* Animated Background Elements */}
      <div className="absolute inset-0">
        <div className="absolute top-20 left-10 w-32 h-32 bg-purple-400/30 rounded-full blur-3xl animate-pulse"></div>
        <div
          className="absolute bottom-20 right-10 w-48 h-48 bg-purple-300/20 rounded-full blur-3xl animate-pulse"
          style={{ animationDelay: "1s" }}
        ></div>
        <div
          className="absolute top-1/2 left-1/2 w-64 h-64 bg-purple-200/10 rounded-full blur-3xl animate-pulse"
          style={{ animationDelay: "2s" }}
        ></div>
      </div>

      <div className="pt-20 relative z-10">
        {/* Hero Section */}
        <section className="py-24 bg-gradient-to-br from-purple-900 via-purple-700 to-purple-500">
          <div className="container mx-auto px-4 text-center text-white">
            <div className="max-w-4xl mx-auto">
              <h1 className="text-6xl md:text-7xl font-bold font-montserrat mb-8">
                –ì–∞–ª–µ—Ä–µ—è —Å–æ–±—ã—Ç–∏–π
              </h1>
              <p className="text-2xl text-purple-200 mb-8">
                –ú–æ–º–µ–Ω—Ç—ã —Å—á–∞—Å—Ç—å—è –∏ –≤–µ—Å–µ–ª—å—è, –∑–∞–ø–µ—á–∞—Ç–ª–µ–Ω–Ω—ã–µ –Ω–∞–≤—Å–µ–≥–¥–∞
              </p>
              <div className="inline-block px-8 py-4 bg-white/20 backdrop-blur-sm rounded-full text-purple-200 text-lg">
                üì∏ –ë–æ–ª–µ–µ {galleryItems.length} —è—Ä–∫–∏—Ö –º–æ–º–µ–Ω—Ç–æ–≤
              </div>
            </div>
          </div>
        </section>

        {/* Filter Section */}
        <section className="py-20 bg-gradient-purple-dark-blue relative overflow-hidden">
          {/* Animated Background Elements */}
          <div className="absolute inset-0 overflow-hidden pointer-events-none">
            <div className="absolute top-20 left-10 w-32 h-32 bg-purple-400/30 rounded-full blur-3xl animate-pulse"></div>
            <div
              className="absolute bottom-20 right-10 w-48 h-48 bg-purple-300/20 rounded-full blur-3xl animate-pulse"
              style={{ animationDelay: "1s" }}
            ></div>
            <div
              className="absolute top-1/2 left-1/2 w-64 h-64 bg-purple-200/10 rounded-full blur-3xl animate-pulse"
              style={{ animationDelay: "2s" }}
            ></div>
          </div>

          <div className="container mx-auto px-4 relative z-10">
            <div className="flex flex-wrap justify-center gap-4 mb-12">
              {categories.map((category) => (
                <Button
                  key={category.key}
                  variant={filter === category.key ? "default" : "outline"}
                  onClick={() => setFilter(category.key)}
                  className={`px-6 py-3 transition-all duration-300 ${
                    filter === category.key
                      ? "bg-gradient-purple text-white shadow-lg scale-105"
                      : "border-purple-300 text-purple-700 hover:bg-purple-50"
                  }`}
                >
                  <Icon
                    name={category.icon as any}
                    className="mr-2"
                    size={18}
                  />
                  {category.label}
                </Button>
              ))}
            </div>
          </div>
        </section>

        {/* Gallery Grid */}
        <section className="py-12 bg-gradient-purple-dark-blue relative overflow-hidden">
          {/* Animated Background Elements */}
          <div className="absolute inset-0 overflow-hidden pointer-events-none">
            <div className="absolute top-20 left-10 w-32 h-32 bg-purple-400/30 rounded-full blur-3xl animate-pulse"></div>
            <div
              className="absolute bottom-20 right-10 w-48 h-48 bg-purple-300/20 rounded-full blur-3xl animate-pulse"
              style={{ animationDelay: "1s" }}
            ></div>
            <div
              className="absolute top-1/2 left-1/2 w-64 h-64 bg-purple-200/10 rounded-full blur-3xl animate-pulse"
              style={{ animationDelay: "2s" }}
            ></div>
          </div>

          <div className="container mx-auto px-4 relative z-10">
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8">
              {filteredItems.map((item, index) => (
                <Card
                  key={item.id}
                  className="overflow-hidden bg-white/80 backdrop-blur-sm border-2 border-purple-200 hover:border-purple-400 hover:shadow-2xl transition-all duration-500 hover:-translate-y-3 animate-scale-in group"
                  style={{ animationDelay: `${index * 0.1}s` }}
                >
                  <div className="relative overflow-hidden">
                    <img
                      src={item.image}
                      alt={item.title}
                      className="w-full h-64 object-cover transition-transform duration-700 group-hover:scale-110"
                    />
                    <div className="absolute inset-0 bg-gradient-to-t from-purple-900/80 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>

                    <div className="absolute top-4 left-4">
                      <Badge className="bg-white/90 text-purple-900 backdrop-blur-sm">
                        {getCategoryLabel(item.category)}
                      </Badge>
                    </div>

                    <div className="absolute bottom-4 left-4 right-4 text-white opacity-0 group-hover:opacity-100 transition-all duration-300 transform translate-y-4 group-hover:translate-y-0">
                      <h3 className="text-lg font-bold font-montserrat mb-2">
                        {item.title}
                      </h3>
                      <p className="text-purple-200 text-sm">{item.date}</p>
                    </div>
                  </div>
                </Card>
              ))}
            </div>
          </div>
        </section>

        {/* Stats Section */}
        <section className="py-20 bg-gradient-to-r from-purple-600 to-purple-800">
          <div className="container mx-auto px-4">
            <div className="text-center mb-12">
              <h2 className="text-4xl md:text-5xl font-bold text-white mb-6">
                –ù–∞—à–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –≤ —Ü–∏—Ñ—Ä–∞—Ö
              </h2>
            </div>

            <div className="grid grid-cols-2 md:grid-cols-4 gap-8 max-w-4xl mx-auto">
              {[
                { number: "200+", label: "–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π", icon: "Calendar" },
                { number: "5000+", label: "–°—á–∞—Å—Ç–ª–∏–≤—ã—Ö –ª–∏—Ü", icon: "Smile" },
                { number: "50+", label: "–ü–ª–æ—â–∞–¥–æ–∫", icon: "MapPin" },
                { number: "4.9/5", label: "–°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞", icon: "Star" },
              ].map((stat, index) => (
                <div key={index} className="text-center text-white">
                  <div className="w-16 h-16 bg-white/20 backdrop-blur-sm rounded-2xl flex items-center justify-center mx-auto mb-4">
                    <Icon
                      name={stat.icon as any}
                      size={32}
                      className="text-white"
                    />
                  </div>
                  <div className="text-3xl md:text-4xl font-bold mb-2">
                    {stat.number}
                  </div>
                  <div className="text-purple-200">{stat.label}</div>
                </div>
              ))}
            </div>
          </div>
        </section>
      </div>
    </div>
  );
};

export default Gallery;
